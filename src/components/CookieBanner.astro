---
interface Props {
  locale: 'ru' | 'en';
}
const { locale } = Astro.props;
---

<div id="cookie-banner" class="fixed bottom-0 left-0 right-0 z-50 bg-neutral-900/95 backdrop-blur-md border-t border-neutral-700/50 shadow-2xl transition-transform duration-300" style="transform: translateY(100%);">
  <div class="max-w-6xl mx-auto px-4 py-4">
    <div class="flex flex-col md:flex-row items-start md:items-center gap-4">
      <!-- Cookie Icon & Text -->
      <div class="flex items-start gap-3 flex-1">
        <div class="flex-shrink-0 mt-0.5">
          <img src="/favicon.svg" alt="SectLauncher" class="w-6 h-6" />
        </div>
        
        <div class="text-sm text-neutral-200">
          <p class="font-medium mb-1">
            {locale === 'ru' ? 'Мы используем файлы cookie' : 'We use cookies'}
          </p>
          <p class="text-neutral-400 leading-relaxed">
            {locale === 'ru' 
              ? 'Для улучшения работы сайта и анализа производительности мы используем анонимную аналитику через Firebase. Никакая личная информация не собирается.' 
              : 'To improve site performance and analyze usage, we use anonymous analytics via Firebase. No personal information is collected.'
            }
          </p>
        </div>
      </div>
      
      <!-- Action Buttons -->
      <div class="flex flex-col sm:flex-row gap-2 md:flex-shrink-0">
        <button
          id="cookie-decline"
          type="button"
          class="px-4 py-2 text-sm font-medium text-neutral-400 hover:text-neutral-200 hover:bg-neutral-800 rounded-lg transition-colors"
        >
          {locale === 'ru' ? 'Отказаться' : 'Decline'}
        </button>
        
        <button
          id="cookie-accept"
          type="button"
          class="px-6 py-2 text-sm font-semibold bg-gradient-to-r from-emerald-500 to-emerald-600 text-white rounded-lg hover:brightness-110 transition-all shadow-lg shadow-emerald-500/20"
        >
          {locale === 'ru' ? 'Принять' : 'Accept'}
        </button>
      </div>
    </div>
    
    <!-- Privacy Policy Link -->
    <div class="mt-3 pt-3 border-t border-neutral-700/50">
      <a 
        href={`/${locale}/privacy`}
        class="text-xs text-neutral-500 hover:text-neutral-300 underline transition-colors"
      >
        {locale === 'ru' ? 'Политика конфиденциальности' : 'Privacy Policy'}
      </a>
    </div>
  </div>
</div>

<script>
  // Cookie banner functionality
  function initCookieBanner() {
    console.log('[CookieBanner] Initializing...');
    const banner = document.getElementById('cookie-banner');
    const acceptBtn = document.getElementById('cookie-accept');
    const declineBtn = document.getElementById('cookie-decline');
    
    if (!banner || !acceptBtn || !declineBtn) {
      console.log('[CookieBanner] Elements not found:', { banner: !!banner, acceptBtn: !!acceptBtn, declineBtn: !!declineBtn });
      return;
    }
    
    // Check if user has already made a choice
    const cookieConsent = localStorage.getItem('cookie-consent');
    console.log('[CookieBanner] Cookie consent status:', cookieConsent);
    
    if (cookieConsent === null) {
      console.log('[CookieBanner] No consent found, showing banner in 1 second...');
      // Show banner if no choice has been made
      setTimeout(() => {
        console.log('[CookieBanner] Showing banner now');
        banner.style.transform = 'translateY(0)';
      }, 1000); // Show after 1 second
    } else {
      console.log('[CookieBanner] Consent already given:', cookieConsent);
    }
    
    // Accept cookies
    acceptBtn.addEventListener('click', async () => {
      localStorage.setItem('cookie-consent', 'accepted');
      banner.style.transform = 'translateY(100%)';
      
      // Динамически импортируем и включаем аналитику
      try {
        const { enableAnalytics } = await import('/src/utils/analytics.ts');
        await enableAnalytics();
      } catch (error) {
        console.error('[CookieBanner] Failed to enable analytics:', error);
      }
    });
    
    // Decline cookies
    declineBtn.addEventListener('click', () => {
      localStorage.setItem('cookie-consent', 'declined');
      banner.style.transform = 'translateY(100%)';
      
      // Динамически импортируем и отключаем аналитику
      try {
        import('/src/utils/analytics.ts').then(({ disableAnalytics }) => {
          disableAnalytics();
        });
      } catch (error) {
        console.error('[CookieBanner] Failed to disable analytics:', error);
      }
    });
  }
  
  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initCookieBanner);
  } else {
    initCookieBanner();
  }
</script>


