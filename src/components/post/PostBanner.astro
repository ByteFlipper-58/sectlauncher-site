---
interface Props {
  title: string;
  date: string | Date;
  heroImage?: string;
  tags?: string[];
  locale: 'ru' | 'en';
  readingMinutes: number;
}
const { title, date, heroImage, tags = [], locale, readingMinutes }: Props = Astro.props;
const dateStr = new Date(date).toLocaleDateString(locale === 'ru' ? 'ru-RU' : 'en-US');
---

<header class="mx-auto w-full lg:max-w-[70%] px-4 mt-4">
  <div class="relative overflow-hidden rounded-2xl border border-neutral-800 bg-neutral-900">
    {heroImage ? (
      <img src={heroImage} alt="" loading="lazy" class="w-full h-60 md:h-72 object-cover" />
    ) : (
      <div class="w-full h-36 md:h-44 bg-gradient-to-br from-neutral-900 to-neutral-800" />
    )}
    <div class="absolute inset-0 bg-gradient-to-t from-neutral-950/80 via-transparent to-transparent" />
    <div class="absolute bottom-0 left-0 right-0 p-6">
      <h1 class="text-2xl md:text-3xl font-extrabold">{title}</h1>
      <div class="mt-2 flex flex-wrap items-center gap-3 text-xs text-neutral-400">
        <span>{dateStr}</span>
        <span>•</span>
        <span>{locale === 'ru' ? `${readingMinutes} мин чтения` : `${readingMinutes} min read`}</span>
        {tags.length > 0 && (<span class="hidden md:inline">•</span>)}
        {tags.length > 0 && (
          <span class="flex flex-wrap gap-1">
            {tags.map((t) => (
              <span class="px-1.5 py-0.5 rounded bg-neutral-900/70 border border-neutral-800 text-neutral-300" data-tag-val={t}>{t}</span>
            ))}
          </span>
        )}
      </div>
    </div>
  </div>
  <slot />
</header>


