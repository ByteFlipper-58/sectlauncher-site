---
interface Props {
  title: string;
  date: string | Date;
  heroImage?: string;

  locale: 'ru' | 'en';
  readingMinutes: number;
  publishAt?: string | Date;
  premiere?: boolean;
}
const { title, date, heroImage, locale, readingMinutes, publishAt, premiere = false }: Props = Astro.props;
const dateStr = new Date(date).toLocaleDateString(locale === 'ru' ? 'ru-RU' : 'en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
const premiereTs = publishAt ? new Date(publishAt).getTime() : undefined;
const isFuturePremiere = !!premiere && !!premiereTs && premiereTs > Date.now();
const premiereStr = publishAt
  ? new Date(publishAt).toLocaleString(locale === 'ru' ? 'ru-RU' : 'en-US', {
      year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit'
    })
  : '';
---

<header class="mx-auto w-full lg:max-w-[70%] px-4 mt-6">
  <div class="relative overflow-hidden rounded-3xl border border-neutral-700/50 bg-gradient-to-br from-neutral-900/80 to-neutral-950/80 backdrop-blur-sm shadow-2xl">
    <!-- Hero Image or Gradient Background -->
    {heroImage ? (
      <div class="relative">
        <img 
          src={heroImage} 
          alt="" 
          loading="lazy" 
          class="w-full h-64 md:h-80 lg:h-96 object-cover transition-transform duration-700 hover:scale-105" 
        />
        <!-- Dark overlay for readability / premiere state -->
        <div class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/20 to-transparent"></div>
        <div class="absolute inset-0 bg-gradient-to-br from-blue-500/10 via-transparent to-purple-500/10 opacity-40"></div>
      </div>
    ) : (
      <div class="relative w-full h-48 md:h-56 lg:h-64 bg-gradient-to-br from-blue-900/30 via-neutral-900 to-purple-900/30 overflow-hidden">
        <!-- Animated background pattern -->
        <div class="absolute inset-0 opacity-20">
          <div class="absolute top-0 left-0 w-40 h-40 bg-blue-500 rounded-full blur-3xl animate-pulse"></div>
          <div class="absolute bottom-0 right-0 w-32 h-32 bg-purple-500 rounded-full blur-3xl animate-bounce delay-1000"></div>
          <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-24 h-24 bg-emerald-500 rounded-full blur-2xl animate-ping delay-2000"></div>
        </div>
        <!-- Grid pattern overlay -->
        <div class="absolute inset-0 opacity-5" style="background-image: radial-gradient(circle at 1px 1px, rgba(255,255,255,0.3) 1px, transparent 0); background-size: 20px 20px;"></div>
      </div>
    )}
    
    <!-- Decorative border accent -->
    <div class="absolute top-0 left-0 w-full h-px bg-gradient-to-r from-transparent via-blue-400/60 to-transparent"></div>
    
    <!-- Content Container -->
    <div class="absolute bottom-0 left-0 right-0 p-6 md:p-8">
      <!-- Title with enhanced typography -->
      <h1 class="text-xl md:text-3xl lg:text-4xl font-black leading-tight text-white mb-4 drop-shadow-lg">
        <span class="bg-gradient-to-r from-white via-blue-100 to-white bg-clip-text text-transparent">
          {title}
        </span>
      </h1>

      {isFuturePremiere && (
        <div class="mb-4 inline-flex flex-col px-3 py-1.5 rounded-lg bg-black/50 text-white backdrop-blur-sm">
          <span class="text-xs uppercase tracking-wide opacity-80">{locale === 'ru' ? 'Премьера' : 'Premiere'}</span>
          {premiereStr && (<span class="text-sm font-semibold">{premiereStr}</span>)}
        </div>
      )}
      
      <!-- Metadata section with improved styling -->
      <div class="flex flex-col md:flex-row md:items-center gap-4 text-sm">
        <!-- Date and reading time -->
        <div class="flex items-center gap-3 text-neutral-300">
          <div class="flex items-center gap-2">
            <svg class="w-4 h-4 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            <span class="font-medium">{dateStr}</span>
          </div>
          <span class="text-neutral-500">•</span>
          <div class="flex items-center gap-2">
            <svg class="w-4 h-4 text-emerald-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <span class="font-medium">{locale === 'ru' ? `${readingMinutes} мин чтения` : `${readingMinutes} min read`}</span>
          </div>
        </div>
        

      </div>
    </div>

  </div>
  
  <slot />
</header>


