---
interface Props { 
  locale: 'ru' | 'en';
  telegramUrl?: string;
  showNewsletter?: boolean;
}
const { 
  locale, 
  telegramUrl = 'https://t.me/sectlauncher',
  showNewsletter = false 
}: Props = Astro.props;

const t = (key: string) => {
  const ru = { 
    title: 'Оставайтесь на связи', 
    text: 'Следите за обновлениями и получайте уведомления о новых релизах', 
    tg: 'Telegram канал',
    newsletter: 'Email рассылка',
    newsletterPlaceholder: 'Введите ваш email...',
    subscribe: 'Подписаться',
    subscribed: 'Подписан!',
    benefits: 'Первыми узнавайте о новых функциях и обновлениях'
  } as const;
  const en = { 
    title: 'Stay Connected', 
    text: 'Follow updates and get notified about new releases', 
    tg: 'Telegram Channel',
    newsletter: 'Email Newsletter',
    newsletterPlaceholder: 'Enter your email...',
    subscribe: 'Subscribe',
    subscribed: 'Subscribed!',
    benefits: 'Be the first to know about new features and updates'
  } as const;
  return (locale === 'ru' ? ru : en)[key as keyof typeof ru];
}
---

<div class="mx-auto w-full lg:max-w-[70%] px-4 mt-10 mb-10">
  <div class="relative overflow-hidden rounded-xl border border-neutral-800 bg-neutral-900/60 backdrop-blur-sm">
    <!-- Тонкий декоративный элемент -->
    <div class="absolute top-0 left-0 w-full h-px bg-gradient-to-r from-transparent via-neutral-600 to-transparent"></div>
    
    <div class="relative p-5">
      <div class="flex flex-col md:flex-row md:items-center justify-between gap-4">
        <!-- Контент -->
        <div class="flex-1">
          <h3 class="text-lg font-bold text-white mb-1">{t('title')}</h3>
          <p class="text-neutral-400 text-sm">{t('text')}</p>
        </div>

        <!-- Кнопки и форма -->
        <div class="flex-shrink-0">
          <div class="flex items-center gap-3">
            <!-- Telegram -->
            <a 
              href={telegramUrl} 
              target="_blank" 
              rel="noopener noreferrer"
              class="group flex items-center gap-2 px-3 py-2 rounded-md border border-sky-700/50 bg-gradient-to-r from-sky-900/60 to-sky-800/60 hover:from-sky-800/80 hover:to-sky-700/80 transition-all duration-200 backdrop-blur-sm"
            >
              <svg class="w-4 h-4 text-sky-300 group-hover:text-white transition-colors flex-shrink-0" viewBox="0 0 24 24" fill="currentColor">
                <path d="M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z"/>
              </svg>
              <span class="text-sm font-medium text-sky-300 group-hover:text-white transition-colors">{t('tg')}</span>
            </a>


          </div>

          {showNewsletter && (
            <div class="mt-4 p-4 rounded-xl bg-neutral-800/50 border border-neutral-700/50">
              <div class="flex items-center gap-2 mb-3">
                <svg class="w-4 h-4 text-amber-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                </svg>
                <span class="text-sm font-medium text-neutral-300">{t('newsletter')}</span>
              </div>
              <form class="flex gap-2" id="newsletter-form">
                <input 
                  type="email" 
                  placeholder={t('newsletterPlaceholder')}
                  class="flex-1 px-3 py-2 rounded-lg bg-neutral-900 border border-neutral-600 text-neutral-300 placeholder-neutral-500 focus:border-amber-500 focus:outline-none focus:ring-2 focus:ring-amber-500/20 text-sm"
                  required
                />
                <button 
                  type="submit"
                  class="px-4 py-2 rounded-lg bg-gradient-to-r from-amber-600 to-orange-600 hover:from-amber-500 hover:to-orange-500 text-white font-medium text-sm transition-all duration-200 hover:scale-105 hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-amber-500/20"
                >
                  {t('subscribe')}
                </button>
              </form>
            </div>
          )}
        </div>
      </div>
    </div>
  </div>
  
  <slot />

  <script is:inline>
    // Обработка формы подписки на newsletter
    const newsletterForm = document.getElementById('newsletter-form');
    if (newsletterForm) {
      newsletterForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const button = e.target.querySelector('button[type="submit"]');
        const input = e.target.querySelector('input[type="email"]');
        const originalText = button.textContent;
        
        // Визуальная обратная связь
        button.textContent = '...';
        button.disabled = true;
        
        try {
          // Здесь можно добавить реальную логику подписки
          await new Promise(resolve => setTimeout(resolve, 1000)); // Имитация запроса
          
          button.textContent = 'Подписан!' || 'Subscribed!';
          button.classList.add('bg-green-600', 'hover:bg-green-500');
          button.classList.remove('bg-gradient-to-r', 'from-amber-600', 'to-orange-600');
          input.value = '';
          
          setTimeout(() => {
            button.textContent = originalText;
            button.disabled = false;
            button.classList.remove('bg-green-600', 'hover:bg-green-500');
            button.classList.add('bg-gradient-to-r', 'from-amber-600', 'to-orange-600');
          }, 3000);
        } catch (error) {
          button.textContent = originalText;
          button.disabled = false;
          console.error('Ошибка подписки:', error);
        }
      });
    }
  </script>
</div>


