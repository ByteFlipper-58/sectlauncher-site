---
interface Props {
  href: string;
  title: string;
  description?: string;
  date: string | Date;
  tags?: string[];
  heroImage?: string;
  locale: 'ru' | 'en';
}
const { href, title, description, date, tags = [], heroImage, locale }: Props = Astro.props;
const dateStr = new Date(date).toLocaleDateString(locale === 'ru' ? 'ru-RU' : 'en-US');
---

<a href={href}
  class="group block rounded-xl border border-neutral-800 bg-neutral-900/40 overflow-hidden transition-colors hover:border-emerald-500/40 focus:outline-none focus:ring-2 focus:ring-emerald-500/40">
  <div class="relative h-44 overflow-hidden bg-neutral-900">
    {heroImage ? (
      <img src={heroImage} alt="" loading="lazy" class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-[1.03]" />
    ) : (
      <div class="w-full h-full bg-gradient-to-br from-neutral-900 to-neutral-800" />
    )}
    <div class="pointer-events-none absolute inset-0 bg-gradient-to-t from-neutral-950/70 via-transparent to-transparent" />
  </div>

  <div class="p-5">
    <h2 class="text-xl font-semibold tracking-tight group-hover:text-white">{title}</h2>
    {description && (<p class="text-neutral-400 mt-1">{description}</p>)}
    <div class="mt-3 flex items-center gap-3 text-xs text-neutral-500">
      <span>{dateStr}</span>
      {tags.length > 0 && (
        <span class="flex flex-wrap gap-1">
          {tags.map((t) => (
            <span class="px-1.5 py-0.5 rounded bg-neutral-800 text-neutral-300" data-tag-val={t}>{t}</span>
          ))}
        </span>
      )}
    </div>
    <div class="mt-3 text-emerald-400/90 text-sm">
      {locale === 'ru' ? 'Читать дальше' : 'Read more'} →
    </div>
  </div>
</a>

