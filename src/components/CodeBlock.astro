---
// CodeBlock.astro
export interface Props {
  code: string;
  language?: string;
  title?: string;
  showLineNumbers?: boolean;
  theme?: 'dark' | 'light';
  copyable?: boolean;
  showStats?: boolean;
  maxLines?: number;
}

const { 
  code, 
  language = 'javascript', 
  title, 
  showLineNumbers = false,
  theme = 'dark',
  copyable = true,
  showStats = false,
  maxLines
} = Astro.props;

// Генерируем уникальный ID для каждого блока кода
const codeId = `code-${Math.random().toString(36).substr(2, 9)}`;

// Нормализуем код - заменяем \n на реальные переводы строк
const normalizedCode = code.replace(/\\n/g, '\n').trim();

// Статистика кода
const lines = normalizedCode.split('\n').length;
const characters = normalizedCode.length;
---

<!-- Подключаем PrismJS глобально только один раз -->
<script is:inline>
  // Инициализируем Prism только один раз для всего сайта
  window.initPrism = window.initPrism || function() {
    if (typeof document === 'undefined' || window.prismInitialized) return;
    window.prismInitialized = true;
    
    // Основные стили Prism
    if (!document.getElementById('prism-styles')) {
      const prismCSS = document.createElement('link');
      prismCSS.id = 'prism-styles';
      prismCSS.rel = 'stylesheet';
      prismCSS.href = 'https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css';
      document.head.appendChild(prismCSS);
      
      // Стили для нумерации строк
      const lineNumbersCSS = document.createElement('link');
      lineNumbersCSS.id = 'prism-line-numbers-styles';
      lineNumbersCSS.rel = 'stylesheet';
      lineNumbersCSS.href = 'https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css';
      document.head.appendChild(lineNumbersCSS);
    }
    
    // Загружаем основной скрипт Prism если его еще нет
    if (!window.Prism) {
      const prismScript = document.createElement('script');
      prismScript.src = 'https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-core.min.js';
      prismScript.onload = function() {
        // Загружаем autoloader
        const autoloaderScript = document.createElement('script');
        autoloaderScript.src = 'https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/autoloader/prism-autoloader.min.js';
        autoloaderScript.onload = function() {
          window.Prism.plugins.autoloader.languages_path = 'https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/';
        };
        document.head.appendChild(autoloaderScript);
        
        // Загружаем плагин для нумерации строк
        const lineNumbersScript = document.createElement('script');
        lineNumbersScript.src = 'https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js';
        document.head.appendChild(lineNumbersScript);
      };
      document.head.appendChild(prismScript);
    }
  };
  
  // Запускаем инициализацию
  window.initPrism();
</script>

<div class={`code-block ${theme}`}>
  <div class="code-header">
    <div class="header-left">
      {title && <span class="code-title">{title}</span>}
      <span class="code-language">{language.toUpperCase()}</span>
    </div>
    <div class="header-right">
      {copyable && (
        <button 
          class="copy-button" 
          data-code-id={codeId}
          title="Копировать код"
          aria-label="Копировать код в буфер обмена"
        >
          <div class="button-content">
            <svg class="copy-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <rect x="9" y="9" width="13" height="13" rx="2" ry="2" stroke="currentColor" stroke-width="2"/>
              <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1" stroke="currentColor" stroke-width="2"/>
            </svg>
            <svg class="check-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" style="display: none;">
              <path d="M9 12l2 2 4-4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              <circle cx="12" cy="12" r="9" stroke="currentColor" stroke-width="2"/>
            </svg>
            <span class="copy-text">Копировать</span>
          </div>
          <div class="button-shine"></div>
        </button>
      )}
    </div>
  </div>
  
  <div class="code-container">
    <pre 
      class={`code-pre ${showLineNumbers ? 'line-numbers' : ''}`}
      style={maxLines ? `max-height: ${maxLines * 1.5}em; overflow-y: auto;` : ''}
      data-original-code={normalizedCode}
      data-code-id={codeId}
    ><code 
      id={codeId}
      class={`language-${language}`}
    >{normalizedCode}</code></pre>
  </div>

  {showStats && (
    <div class="code-stats">
      <div class="stats-group">
        <span class="stat-item">
          <span class="stat-label">Строк:</span>
          <span class="stat-value">{lines}{maxLines && lines > maxLines ? ` (показано ${maxLines})` : ''}</span>
        </span>
        <span class="stat-item">
          <span class="stat-label">Символов:</span>
          <span class="stat-value">{characters}</span>
        </span>
        <span class="stat-item">
          <span class="stat-label">Язык:</span>
          <span class="stat-value">{language}</span>
        </span>
      </div>
    </div>
  )}
</div>

<style>
  .code-block {
    border-radius: 8px;
    overflow: hidden;
    border: 1px solid;
    font-family: 'JetBrains Mono', 'Fira Code', 'Consolas', monospace;
    margin: 1rem 0;
    position: relative;
  }

  .code-block.dark {
    background-color: #1e1e1e;
    border-color: #333;
    color: #d4d4d4;
  }

  .code-block.light {
    background-color: #f8f8f8;
    border-color: #e1e1e1;
    color: #383a42;
  }

  .code-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem 1rem;
    font-size: 0.875rem;
    border-bottom: 1px solid;
    position: relative;
    min-height: 2.75rem;
  }

  .dark .code-header {
    background-color: #252526;
    border-bottom-color: #333;
  }

  .light .code-header {
    background-color: #f0f0f0;
    border-bottom-color: #e1e1e1;
  }

  .header-left {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .header-right {
    display: flex;
    align-items: center;
  }

  .code-title {
    font-weight: 600;
  }

  .code-language {
    opacity: 0.7;
    text-transform: uppercase;
    font-size: 0.75rem;
    letter-spacing: 0.05em;
    font-weight: 500;
  }

  .code-container {
    position: relative;
  }

  .copy-button {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.05));
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 8px;
    color: inherit;
    padding: 0.5rem 0.75rem;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.375rem;
    font-size: 0.75rem;
    font-weight: 500;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
    backdrop-filter: blur(12px);
    min-width: auto;
    justify-content: center;
    box-shadow: 0 1px 6px rgba(0, 0, 0, 0.08), 
                0 1px 2px rgba(0, 0, 0, 0.08),
                inset 0 1px 0 rgba(255, 255, 255, 0.1);
  }

  .button-content {
    display: flex;
    align-items: center;
    gap: 0.375rem;
    position: relative;
    z-index: 2;
    transition: all 0.3s ease;
  }

  .button-shine {
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, 
      transparent, 
      rgba(255, 255, 255, 0.3), 
      rgba(255, 255, 255, 0.1), 
      transparent);
    transition: left 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 1;
  }

  .copy-icon, .check-icon {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    flex-shrink: 0;
  }

  .copy-button:hover .button-shine {
    left: 100%;
  }

  .copy-button:hover {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.08));
    border-color: rgba(255, 255, 255, 0.3);
    transform: translateY(-2px) scale(1.02);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15), 
                0 4px 10px rgba(0, 0, 0, 0.1),
                inset 0 1px 0 rgba(255, 255, 255, 0.2);
  }

  .copy-button:hover .copy-icon {
    transform: scale(1.1);
  }

  .copy-button:active {
    transform: translateY(-1px) scale(1.01);
    transition: transform 0.1s ease;
  }

  .copy-button.copied {
    background: linear-gradient(135deg, rgba(34, 197, 94, 0.25), rgba(34, 197, 94, 0.15));
    border-color: rgba(34, 197, 94, 0.4);
    color: #22c55e;
    box-shadow: 0 4px 20px rgba(34, 197, 94, 0.2), 
                0 2px 8px rgba(34, 197, 94, 0.1),
                inset 0 1px 0 rgba(34, 197, 94, 0.2);
  }

  .copy-button.copied .button-content {
    animation: successPulse 0.6s ease-out;
  }

  @keyframes successPulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
  }

  .light .copy-button {
    background: linear-gradient(135deg, rgba(0, 0, 0, 0.06), rgba(0, 0, 0, 0.02));
    border-color: rgba(0, 0, 0, 0.12);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05), 
                0 1px 3px rgba(0, 0, 0, 0.05),
                inset 0 1px 0 rgba(255, 255, 255, 0.8);
  }

  .light .copy-button .button-shine {
    background: linear-gradient(90deg, 
      transparent, 
      rgba(255, 255, 255, 0.6), 
      rgba(255, 255, 255, 0.3), 
      transparent);
  }

  .light .copy-button:hover {
    background: linear-gradient(135deg, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.04));
    border-color: rgba(0, 0, 0, 0.18);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1), 
                0 4px 10px rgba(0, 0, 0, 0.06),
                inset 0 1px 0 rgba(255, 255, 255, 0.9);
  }

  .light .copy-button.copied {
    background: linear-gradient(135deg, rgba(34, 197, 94, 0.2), rgba(34, 197, 94, 0.1));
    border-color: rgba(34, 197, 94, 0.3);
    color: #16a34a;
    box-shadow: 0 4px 20px rgba(34, 197, 94, 0.15), 
                0 2px 8px rgba(34, 197, 94, 0.08),
                inset 0 1px 0 rgba(34, 197, 94, 0.15);
  }

  .copy-text {
    opacity: 1;
    transform: translateX(0);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    white-space: nowrap;
    pointer-events: none;
    font-weight: 500;
    letter-spacing: 0.02em;
  }

  .copy-button:hover .copy-text {
    opacity: 1;
    transform: translateX(0);
  }

  .copy-button.copied .copy-text {
    opacity: 1;
    transform: translateX(0);
    color: inherit;
  }

  .code-pre {
    margin: 0;
    padding: 1rem;
    overflow-x: auto;
    font-size: 0.875rem;
    line-height: 1.5;
    background: transparent !important;
  }

  /* Переопределяем стили PrismJS для нашей темы */
  .dark .code-pre {
    background: #1e1e1e !important;
  }

  .light .code-pre {
    background: #f8f8f8 !important;
  }

  .code-pre::-webkit-scrollbar {
    height: 8px;
    width: 8px;
  }

  .code-pre::-webkit-scrollbar-track {
    background: transparent;
  }

  .dark .code-pre::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.2);
    border-radius: 4px;
  }

  .light .code-pre::-webkit-scrollbar-thumb {
    background: rgba(0, 0, 0, 0.2);
    border-radius: 4px;
  }

  .code-pre::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.3);
  }

  .light .code-pre::-webkit-scrollbar-thumb:hover {
    background: rgba(0, 0, 0, 0.3);
  }

  .code-stats {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem 1rem;
    font-size: 0.75rem;
    border-top: 1px solid;
  }

  .dark .code-stats {
    background-color: #252526;
    border-top-color: #333;
  }

  .light .code-stats {
    background-color: #f0f0f0;
    border-top-color: #e1e1e1;
  }

  .stats-group {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .stat-item {
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  .stat-label {
    opacity: 0.7;
  }

  .stat-value {
    font-weight: 600;
    font-family: 'JetBrains Mono', 'Fira Code', 'Consolas', monospace;
  }

  .code-pre code {
    background: none !important;
    padding: 0;
    font-family: inherit;
    white-space: pre;
  }

  /* Стили для плагина line-numbers */
  .line-numbers-rows {
    pointer-events: none;
    position: absolute;
    top: 0;
    left: 0;
    width: 3em;
    letter-spacing: -1px;
    border-right: 1px solid rgba(255, 255, 255, 0.1);
    user-select: none;
    counter-reset: linenumber;
  }

  .light .line-numbers-rows {
    border-right-color: rgba(0, 0, 0, 0.1);
  }

  .line-numbers-rows > span {
    pointer-events: none;
    display: block;
    counter-increment: linenumber;
  }

  .line-numbers-rows > span:before {
    content: counter(linenumber);
    color: inherit;
    opacity: 0.5;
    display: block;
    padding-right: 0.8em;
    text-align: right;
  }

  .line-numbers .code-pre {
    padding-left: 3.8em;
  }

  /* Переопределяем стили PrismJS для наших тем */
  .dark code[class*="language-"], .dark pre[class*="language-"] {
    color: #d4d4d4 !important;
    background: #1e1e1e !important;
  }

  .light code[class*="language-"], .light pre[class*="language-"] {
    color: #383a42 !important;
    background: #f8f8f8 !important;
  }

  @media (max-width: 768px) {
    .copy-text {
      font-size: 0.6875rem;
    }

    .copy-button {
      min-width: auto;
      padding: 0.4375rem 0.625rem;
      border-radius: 6px;
      gap: 0.3125rem;
      font-size: 0.6875rem;
    }

    .copy-button:hover {
      transform: translateY(-1px) scale(1.01);
    }

    .copy-button .button-content {
      gap: 0.3125rem;
    }
    
    .copy-icon, .check-icon {
      width: 14px;
      height: 14px;
    }
    
    .code-pre {
      font-size: 0.8125rem;
    }

    .stats-group {
      gap: 0.5rem;
    }

    .stat-item {
      font-size: 0.6875rem;
    }

    .code-stats {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }

    .header-left {
      gap: 0.5rem;
    }

    .code-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }

    .line-numbers-rows {
      width: 2.5em;
    }
    
    .line-numbers .code-pre {
      padding-left: 3em;
    }
  }
</style>

<script define:vars={{ codeId }}>
  // Функциональность копирования кода и инициализация PrismJS
  function initializeCodeBlock() {
    // Ждем загрузки всех скриптов Prism
    const waitForPrism = () => {
      return new Promise((resolve) => {
        const checkPrism = () => {
          if (window.Prism && window.Prism.plugins?.autoloader && window.Prism.plugins?.lineNumbers) {
            resolve(true);
          } else {
            setTimeout(checkPrism, 50);
          }
        };
        checkPrism();
      });
    };

    waitForPrism().then(() => {
      const codeElement = document.getElementById(codeId);
      const preElement = codeElement?.parentElement;
      
      if (codeElement && preElement) {
        // Настраиваем autoloader
        if (window.Prism.plugins.autoloader) {
          window.Prism.plugins.autoloader.languages_path = 'https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/';
        }

        // Подсвечиваем код
        window.Prism.highlightElement(codeElement);
        
        // Если нужна нумерация строк, добавляем её
        if (preElement.classList.contains('line-numbers') && window.Prism.plugins.lineNumbers) {
          window.Prism.plugins.lineNumbers.lineNumbersPlugin(preElement);
        }
      }
    });

    // Копирование кода
    const copyButton = document.querySelector(`[data-code-id="${codeId}"]`);
    if (copyButton) {
      copyButton.addEventListener('click', async () => {
        const codeElement = document.getElementById(codeId);
        const copyText = copyButton.querySelector('.copy-text');
        const copyIcon = copyButton.querySelector('.copy-icon');
        const checkIcon = copyButton.querySelector('.check-icon');
        const codeContainer = copyButton.closest('.code-block')?.querySelector('pre');
        
        if (codeElement && codeContainer) {
          try {
            // Получаем оригинальный код из data-attribute
            const originalCode = codeContainer.getAttribute('data-original-code') || codeElement.textContent || '';
            
            await navigator.clipboard.writeText(originalCode);
            const originalText = copyText ? copyText.textContent : 'Копировать';
            
            // Добавляем класс для анимации успешного копирования
            copyButton.classList.add('copied');
            if (copyText) copyText.textContent = 'Скопировано!';
            
            // Переключаем иконки
            if (copyIcon) copyIcon.style.display = 'none';
            if (checkIcon) checkIcon.style.display = 'block';
            
            setTimeout(() => {
              copyButton.classList.remove('copied');
              if (copyText) copyText.textContent = originalText;
              if (copyIcon) copyIcon.style.display = 'block';
              if (checkIcon) checkIcon.style.display = 'none';
            }, 2000);
          } catch (err) {
            console.error('Не удалось скопировать текст: ', err);
            // Анимация ошибки - более плавная
            copyButton.style.transform = 'translateX(-3px)';
            setTimeout(() => copyButton.style.transform = 'translateX(3px)', 100);
            setTimeout(() => copyButton.style.transform = 'translateX(-2px)', 200);
            setTimeout(() => copyButton.style.transform = 'translateX(0)', 300);
          }
        }
      });
    }
  }

  // Запускаем инициализацию
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeCodeBlock);
  } else {
    initializeCodeBlock();
  }
</script>